name: main

on:
  push:
    tags:
    - '*'
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        props:
        - Dockerfile: Dockerfile
          suffix: alpine
        - Dockerfile: Dockerfile-ubuntu
          suffix: ubuntu
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Docker meta
        id: meta
        if: github.event_name != 'pull_request'
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            bryanlatten/docker-data-eater
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: finalize docker tags and suffixes
        if: github.event_name != 'pull_request'
        run: |
          res=$(
            node --eval="
            const tags = '${{ steps.meta.outputs.tags }}'.trim();
            const suffix = '${{ matrix.props.suffix }}'.trim();
            const append = (suffix.length) ? '-' + suffix : '';
            console.log(tags.split(',').map((i) => i  + append).join(','));
          ")
          echo "DOCKER_TAGS=$res" >> $GITHUB_ENV
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: output
        run: echo [MATRIX] ${{ matrix.props.Dockerfile }} tags ${{ env.DOCKER_TAGS }}
      -
        name: Build + push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: ${{ matrix.props.Dockerfile }}
          tags: ${{ DOCKER_TAGS }}
          push: ${{ github.event_name != 'pull_request' }}
